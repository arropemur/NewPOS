/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * HostView.java
 *
 * Created on Aug 11, 2011, 3:19:59 PM
 */
package com.openbravo.pos.inventory;
import com.openbravo.data.gui.ComboBoxValModel;


import java.util.UUID;
import com.openbravo.basic.BasicException;
import com.openbravo.data.user.DirtyManager;
import com.openbravo.data.user.EditorRecord;
import com.openbravo.format.Formats;
import com.openbravo.pos.forms.DataLogicSales;
import java.util.List;
import java.awt.Component;
/**
 *
 * @author hgrimberg
 */
public class HostView extends javax.swing.JPanel implements EditorRecord {
   private List locations;
   private String m_HID;
     private ComboBoxValModel locationmodel;
    /** Creates new form HostView */
    public HostView(DirtyManager dirty,DataLogicSales sls) throws BasicException {
        initComponents();
        hostnameField.getDocument().addDocumentListener(dirty);
        locations = sls.getLocationsList().list();
        locationmodel = new ComboBoxValModel(locations);
        locationMenu.setModel(locationmodel);
        locationMenu.addActionListener(dirty);
      writeValueEOF();
   }
    @Override
       public void writeValueEOF() {
            locationmodel.setSelectedKey(null);
            m_HID=null;
            hostnameField.setEnabled(false);
       }
    @Override
       public void writeValueInsert() {
       m_HID = UUID.randomUUID().toString();
       hostnameField.setText(null);
       hostnameField.setEnabled(true);
       
       
       }
    @Override
       public void writeValueDelete(Object value) {
          Object[] host = (Object[]) value;
         m_HID = Formats.STRING.formatValue(host[0]);
        hostnameField.setText(Formats.STRING.formatValue(host[1]));
       locationmodel.setSelectedKey(host[2]);
       locationMenu.setModel(locationmodel);
       hostnameField.setEnabled(true);
       }
    @Override
       public void writeValueEdit(Object value) {
        Object[] host = (Object[]) value;
         m_HID = Formats.STRING.formatValue(host[0]);
        hostnameField.setText(Formats.STRING.formatValue(host[1]));
       locationmodel.setSelectedKey(host[2]);
       locationMenu.setModel(locationmodel);
       hostnameField.setEnabled(true);
       }
    @Override
       public Object createValue() throws BasicException {
           Object[] host = new Object[3];
           host[0]= m_HID;
           host[1]= hostnameField.getText();
           host[2]= locationmodel.getSelectedKey();
           return host;
       }
    @Override
       public Component getComponent() {
              return this;
       }
     @Override
    public void refresh() {
    }
  

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        hostnameLabel = new javax.swing.JLabel();
        locationLabel = new javax.swing.JLabel();
        hostnameField = new javax.swing.JTextField();
        locationMenu = new javax.swing.JComboBox();

        hostnameLabel.setText("Hostname:");
        hostnameLabel.setToolTipText("Enter the hostname to bind this location to");

        locationLabel.setText("Location:");
        locationLabel.setToolTipText("Select the location");

        hostnameField.setToolTipText("Enter the hostname to bind to.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hostnameLabel)
                    .addComponent(locationLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(locationMenu, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(hostnameField, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE))
                .addContainerGap(104, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hostnameLabel)
                    .addComponent(hostnameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(locationMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(locationLabel))
                .addContainerGap(213, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField hostnameField;
    private javax.swing.JLabel hostnameLabel;
    private javax.swing.JLabel locationLabel;
    private javax.swing.JComboBox locationMenu;
    // End of variables declaration//GEN-END:variables
}
